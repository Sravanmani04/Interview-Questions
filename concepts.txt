SSH between two virtual machines ie between ubuntu and centos:
First get ip address of both machines
To see ip address
$ ip --breif addr show
exec above command on both machines
now login to centos via ubuntu
ssh user@hostipaddr

To copy recursively from centos to ubuntu
scp -r source/path/file ipaddr:dest/file



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                                    SSH between two amazonlinux instances
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

To eshtablish connection between two amazon linux instances

Create two vms with ssh port open for your ip or open to world.

lets consider one as master and other as slave
Login to the vm-slave:

Set hostname on slave
$ sudo hostnamectl set-hostname <name-of-host>
$ sudo hostnamectl set-hostname slave

Set Password for the ec2-user on slave
$ sudo passwd ec2-user # and it asks for password give it.

Set the PasswordAuthentication to yes and reboot on slave:

$ sudo vim /etc/ssh/sshd_config
    Execute the above command and change the PasswordAuthentication yes and exectu below command
    $ sudo service sshd restart

Login to the vm-master:

Set hostname
$ sudo hostnamectl set-hostname <name-of-host>
$ sudo hostnamectl set-hostname master

Set Password for the ec2-user
$ sudo passwd ec2-user # and it asks for password give it.

Now ssh to slave machine ip:
$ ssh  <ip of slave machine>
It asks for password to authenticate. give password and login

To set password less authentication between master and slave, 
Generate keys on master machine and copy it to slave machine.
$ ssh-keygen  #in master machine
The keys are generated at ~/.ssh, Now coping to slave from master.
$ ssh-copy-id <ipaddressofslave>

To eshtablish password less authentication between slave and master,
Set the PasswordAuthentication to yes and reboot on master:
$ sudo vim /etc/ssh/sshd_config
    Execute the above command and change the PasswordAuthentication yes and exectu below command
    $ sudo service sshd restart

Generate keys on slave machine,
$ ssh-keygen
Now copy keys to master.
ssh-copy-id <ipofmaster>

Thats how passwordless authentication is eshtablished.

#################################################################################################################
                        ssh to a user in amazon linux using password less authentication
#################################################################################################################

Now create a user in slave machine named mani and give password:
$ sudo useradd mani && sudo passwd mani # provide the password when prompted.

login as user
$ su - mani

Add mani to wheel group to execute all commands in amazon linux2 
$ usermod -aG wheel mani

create .ssh directory under user home directory
mkdir -p $HOME/.ssh

Change the directorys permissions to 700 so that only user has all privilages on this directory:
chmod 700 $HOME/.ssh

Create an empty file under .ssh named authorized_keys and change permissions to 600(read and write)
touch .ssh/authorized_keys && sudo chmod 600 .ssh/authorized_keys

Now copy the public keys of server from where you want to ssh to this user
cat public-key of master server and paste in authorized_keys of slave user.

Now execute below command in master:
ssh -i path/to/file mani@hostip 


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                                                Stream Editor
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

What is the full form of sed?
        sed - stream editor
        it performs text transformation on streams like:
            substitute some text for other text.
            remove lines
            append text after given lines
            insert text before certain lines.
            sed is used programatically not interactively.

    SED used for :
                Replacement of string
                Find and replace string
                Case characters with sed using I or i.
                By default sed replaces only first occurace of replacement string. To avoid this behaviour use g flag(global)
                One can personalise to change the 2 nd or 3 rd or whatever the occurance you want to change,
                 you can give that number at the end like(sed 's/pattern-string/replacement-string/occurance number' <filename>)
            to invoke sed use command  type -a sed
                sravan@BOGIREDDY:~$ type -a sed
                sed is /usr/bin/sed
                sed is /bin/sed
    1- replacement of string:
        sravan@BOGIREDDY:~$ echo "Dwight is assistant regional manager" > manager.txt
        sravan@BOGIREDDY:~$ cat manager.txt
        Dwight is assistant regional manager
        sravan@BOGIREDDY:~$ sed 's/assistant/assistant to the/' manager.txt
        Dwight is assistant to the regional manager
    But here the original file manager.txt is unaltered
        sravan@BOGIREDDY:~$ cat manager.txt
        Dwight is assistant regional 
        
    2- find and replace string 
            sravan@BOGIREDDY:~$ echo "i love my wife" > love.txt
            sravan@BOGIREDDY:~$ cat love.txt
            i love my wife
            sravan@BOGIREDDY:~$ sed 's/my wife/sed/' love.txt
            i love sed
    3- case characters with sed:
        if sed doesnt know the characters we passed it then doesnt change anything
            sravan@BOGIREDDY:~$ sed 's/MY WIFE/sed/' love.txt
            i love my wife
        for flags to pass the syntax is sed 's/search-pattern/replacement-strings/flags' <filename>
        we can pass a flag to ignore case 
            sravan@BOGIREDDY:~$ sed 's/MY WIFE/sed/i' love.txt
            i love sed
        here flags i and I works and does the same thing. we can use any of them.

        now iam appending 2 lines to love.txt
            sravan@BOGIREDDY:~$ echo 'this is line2.' >> love.txt
            sravan@BOGIREDDY:~$ echo 'i love my wife with whole heart.' >> love.txt
            sravan@BOGIREDDY:~$ cat love.txt
            i love my wife
            this is line2.
            i love my wife with whole heart.

        now lets do the replacement string work.
            sravan@BOGIREDDY:~$ sed 's/my wife/sed/' love.txt
            i love sed
            this is line2.
            i love sed with whole heart.
        this replaced all words in the file with replacement string.
        now i appended one more line.
            sravan@BOGIREDDY:~$ echo "i love my wife and my wife loves me. Also my wife loves the cat" >> love.txt
            sravan@BOGIREDDY:~$ sed 's/my wife/sed/' love.txt
            i love sed
            this is line2.
            i love sed with whole heart.
            i love sed and my wife loves me. Also my wife loves the cat
        by default sed replaces only first occurace of replacement string. 
        to avoid this behaviour use g flag(global)
            sravan@BOGIREDDY:~$ sed 's/my wife/sed/g' love.txt
            i love sed
            this is line2.
            i love sed with whole heart.
            i love sed and sed loves me. Also sed loves the 
        we can personalise to change the 2 nd or 3 rd or whatever the occurance 
        you want to change you can give that number. i want to change 2 nd occurance.
                sravan@BOGIREDDY:~$ sed 's/my wife/sed/2' love.txt
                i love my wife
                this is line2.
                i love my wife with whole heart.
                i love my wife and sed loves me. Also my wife loves the cat
        
        we can save the output to a new file as below
                sravan@BOGIREDDY:~$ sed 's/my wife/sed/g' love.txt > mynew-love.txt
                sravan@BOGIREDDY:~$ ls
                data  love.txt  manager.txt  mynew-love.txt  practise  vprofile
        we can also do inplace edit of original file by doing so as below.
                sravan@BOGIREDDY:~$ sed -i.bak 's/my wife/sed/g' love.txt
                sravan@BOGIREDDY:~$ cat love.txt.bak
                i love sed
                this is line2.
                i love sed with whole heart.
                i love sed and sed loves me. Also sed loves the cat
        
        we can do replace seperator charactes like
            sravan@BOGIREDDY:~$ echo '/home/json/' | sed 's#/home/json#/export/user/jsonc#'
            s/export/user/jsonc/
        you can replace # with any sign or characters
            sravan@BOGIREDDY:~$ echo '/home/json/' | sed 's:/home/json:/export/user/jsonc:'
            /export/user/jsonc/

        How to delete lines with sed?
            sravan@BOGIREDDY:~$ sed '/this/d' love.txt
            i love sed
            i love sed with whole heart.
            i love sed and sed loves me. Also sed loves the cat
        use flag d to delete the line

        to remove lines that start with #
        sed '/^#/d' <file name>  # ^ indicates start of line
        To remove blank lines 
        sed '/^$/' <filename>   #  $ denotes end of line
        to execute above operations in one line and replace string
            sravan@BOGIREDDY:~$ cat  text.txt
            # hello there
            use config
            #hi there
            remove config
            sravan@BOGIREDDY:~$ sed '/^#/d ; /^$/d ; s/config/http/' text.txt
            use http
            remove http
        we can also use this for above 
            sravan@BOGIREDDY:~$ sed -e '/^#/d' -e '/^$/d' -e 's/config/httpd/' text.txt
            use httpd
            remove httpd
        we can write this commands as a script and pass to the sed via -f and executed
        sed -f script.sed text.txt
            sravan@BOGIREDDY:~$ echo "/^#/d" > script.sed
            sravan@BOGIREDDY:~$ echo "/^$/d" >> script.sed
            sravan@BOGIREDDY:~$  echo "s/config/httpd/" >> script.sed
            sravan@BOGIREDDY:~$ cat script.sed
            /^#/d
            /^$/d
            s/config/httpd/
            sravan@BOGIREDDY:~$ sed -f script.sed text.txt
            use httpd
            remove httpd
        we can replace the second line itself by using address
            sravan@BOGIREDDY:~$ sed '2 s/config/httpd/' text.txt
            # hello there
            use httpd
            #hi there
            remove config

        we can also serach and replace by word containing in the line
            sravan@BOGIREDDY:~$ sed '/remove/ s/config/httpd/' text.txt
            # hello there
            use config
            #hi there
            remove httpd
        
        we can also spectify line number range to take it effect
            sravan@BOGIREDDY:~$ sed '1,3 s/config/httpd/' text.txt
            # hello there
            use httpd
            #hi there
            remove config
            sravan@BOGIREDDY:~$ sed '1,4 s/config/httpd/' text.txt
            # hello there
            use httpd
            #hi there
            remove httpd

            we can also use reg expression as above.          





